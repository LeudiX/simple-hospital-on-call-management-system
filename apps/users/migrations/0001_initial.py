# Generated by Django 5.1.1 on 2024-09-19 00:08

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('patient', 'Patient'), ('doctor', 'Doctor')], max_length=20)),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists'}, help_text='Required 150 caracters or fewer.Letters, digits and spaces only.', max_length=150, unique=True)),
                ('email', models.EmailField(error_messages={'unique': 'A user with that email already exits'}, help_text='The email field is required', max_length=254, unique=True, verbose_name='email')),
                ('birthdate', models.DateField(blank=True, help_text='Select your birth date', null=True, verbose_name='birthdate')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('U', 'Unsure')], help_text='Select your gender', max_length=1, verbose_name='gender')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('customuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('specialty', models.CharField(choices=[('General Practice', 'General Practice'), ('Cardiology', 'Cardiology'), ('Dermatology', 'Dermatology'), ('Oncology', 'Oncology'), ('Pediatrics', 'Pediatrics'), ('Neurology', 'Neurology'), ('Orthopedics', 'Orthopedics'), ('Psychiatry', 'Psychiatry')], help_text="Doctor's specialty", max_length=100, verbose_name='Specialty')),
                ('experience', models.PositiveIntegerField(help_text="Doctor's Years of Experience", validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(50)], verbose_name='Experience')),
            ],
            options={
                'verbose_name': 'Doctor',
                'verbose_name_plural': 'Doctors',
            },
            bases=('users.customuser',),
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('customuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('patient_type', models.CharField(choices=[('urgency', 'Urgency'), ('common', 'Common')], max_length=50)),
                ('temperature', models.DecimalField(blank=True, decimal_places=2, help_text="Patient's body temperature in degrees Celsius", max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(36.5), django.core.validators.MaxValueValidator(42.5)], verbose_name='Body temperature')),
                ('pulse', models.IntegerField(blank=True, help_text="Patient's pulse rate in beats per minute", null=True, validators=[django.core.validators.MinValueValidator(40), django.core.validators.MaxValueValidator(120)], verbose_name='Pulse Rate')),
                ('systolic_pressure', models.DecimalField(blank=True, decimal_places=2, help_text="Patient's systolic blood pressure in mmHg", max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(90), django.core.validators.MaxValueValidator(140)], verbose_name='Systolic Blood Pressure')),
                ('diastolic_pressure', models.DecimalField(blank=True, decimal_places=2, help_text="Patient's diastolic blood pressure in mmHg", max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(60), django.core.validators.MaxValueValidator(90)], verbose_name='Diastolic Blood Pressure')),
            ],
            options={
                'verbose_name': 'Patient',
                'verbose_name_plural': 'Patients',
            },
            bases=('users.customuser',),
        ),
        migrations.CreateModel(
            name='CommonPatient',
            fields=[
                ('patient_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='users.patient')),
                ('diagnosis', models.CharField(blank=True, help_text="Patient's medical diagnosis", max_length=255, null=True, verbose_name='diagnosis')),
                ('analysis_applied', models.IntegerField(choices=[(0, 'No'), (1, 'Yes')], help_text="Patient's required analysis?", verbose_name='Analysis applied')),
            ],
            bases=('users.patient',),
        ),
        migrations.CreateModel(
            name='UrgencyPatient',
            fields=[
                ('patient_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='users.patient')),
                ('main_symptom', models.CharField(help_text="Patient's main symptom", max_length=255, verbose_name='Main synptom')),
                ('admitted', models.IntegerField(choices=[(0, 'No'), (1, 'Yes')], help_text="Patient's required admission?", verbose_name='Admitted')),
            ],
            bases=('users.patient',),
        ),
    ]
